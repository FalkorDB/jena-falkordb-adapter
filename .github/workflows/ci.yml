name: CI - Build and Test
permissions:
  contents: read

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java: [ '11', '17', '21' ]
    
    services:
      falkordb:
        image: falkordb/falkordb:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Install Redis CLI
      run: sudo apt-get update && sudo apt-get install -y redis-tools
    
    - name: Wait for FalkorDB to be ready
      run: |
        echo "Waiting for FalkorDB to be ready..."
        for i in {1..30}; do
          if redis-cli -h localhost -p 6379 ping > /dev/null 2>&1; then
            echo "FalkorDB is ready!"
            redis-cli -h localhost -p 6379 INFO server | grep redis_version || true
            exit 0
          fi
          echo "Attempt $i/30: FalkorDB not ready yet, waiting..."
          sleep 2
        done
        echo "ERROR: FalkorDB failed to start within 60 seconds"
        exit 1
    
    - name: Build with Maven
      run: mvn -B clean compile --file pom.xml
    
    - name: Run tests
      run: mvn -B test --file pom.xml
      env:
        FALKORDB_HOST: localhost
        FALKORDB_PORT: 6379
    
    - name: Package
      run: mvn -B package -DskipTests --file pom.xml
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-java-${{ matrix.java }}
        path: target/surefire-reports/
    
    - name: Upload coverage reports
      if: matrix.java == '11'
      uses: actions/upload-artifact@v4
      with:
        name: jar-file
        path: target/*.jar

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Run Maven verify
      run: mvn -B verify -DskipTests -Dgpg.skip=true --file pom.xml
    
    - name: Check dependencies for vulnerabilities
      run: mvn dependency:analyze
      continue-on-error: true
